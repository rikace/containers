{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/data.service.ts","./src/app/customers/customers.component.ts","./src/app/customers/customers.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CustomersComponent }     from './customers/customers.component';\n\nconst routes: Routes = [\n  { path: '',  pathMatch:'full', redirectTo: '/customers' },\n  { path: 'customers', component: CustomersComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'customers-app';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CustomersComponent } from './customers/customers.component';\n\n@NgModule({\n  declarations: [\n    AppComponent, CustomersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule, ReactiveFormsModule, HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { ICustomer } from '../shared/interfaces';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService {\n    \n    private url: string = 'api/customersservice/customers/';\n    \n    constructor(private http: HttpClient) { }\n    \n    getCustomersSummary() : Observable<ICustomer[]> {\n        return this.http.get<ICustomer[]>(this.url)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n    \n    updateCustomer(customer: ICustomer) {       \n      return this.http.put(this.url + customer.id, customer)\n                .pipe(\n                    catchError(this.handleError)\n                );\n    }\n    \n    handleError(error: any) {\n        console.error(error);\n        return Observable.throw(error.json().error || 'Server error');\n    }\n    \n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../core/data.service';\nimport { ICustomer } from '../shared/interfaces';\n\n@Component({\n    selector: 'app-customers',\n    templateUrl: 'customers.component.html'\n})\nexport class CustomersComponent implements OnInit {\n    \n    customers: ICustomer[] = [];\n    editId: number = 0;\n    errorMessage: string;\n    editViewEnabled = false;\n\n    constructor(private dataService: DataService) {  }\n\n    ngOnInit() { \n        this.dataService.getCustomersSummary()\n            .subscribe((data: ICustomer[]) => this.customers = data);\n    }\n    \n    save(customer: ICustomer) {\n        this.dataService.updateCustomer(customer)\n            .subscribe((status: boolean) => {\n                if (status) {\n                    this.editId = 0;\n                } else {\n                    this.errorMessage = 'Unable to save customer';\n                }\n            })\n    }\n\n}","<h1>Customers</h1>\n<br />\n\n<!-- Added navbar to switch between list view shown in video and new edit view -->\n<div class=\"navbar\">\n    <ul class=\"nav navbar-nav\">\n        <li class=\"toolbar-item\">\n            <a (click)=\"editViewEnabled=false\" [class.active]=\"!editViewEnabled\">\n                <span class=\"glyphicon glyphicon-align-justify\"></span> List View\n            </a>\n        </li>\n        <li class=\"toolbar-item\">\n            <a (click)=\"editViewEnabled=true\" [class.active]=\"editViewEnabled\">\n                <span class=\"glyphicon glyphicon-pencil\"></span> Edit View\n            </a>\n        </li>\n    </ul>\n</div>\n\n<div *ngIf=\"!editViewEnabled\">\n    <div class=\"row header-row\">\n        <div class=\"col-md-2\">\n            Name\n        </div>\n        <div class=\"col-md-4\">\n            Email\n        </div>\n        <div class=\"col-md-4\">\n            Address\n        </div>\n        <div class=\"col-md-2\">\n            City\n        </div>\n    </div>\n    <div class=\"row\" *ngFor=\"let customer of customers\">\n        <div class=\"col-md-2\">\n            {{ customer.firstName  }} {{ customer.lastName }} \n        </div>\n        <div class=\"col-md-4\">\n            {{ customer.email }}\n        </div>\n        <div class=\"col-md-4\">\n            {{ customer.address }}\n        </div>\n        <div class=\"col-md-2\">\n            {{ customer.city }}\n        </div>\n        <br />\n    </div>\n</div>\n\n<!-- Added editable list to demonstrate doing an HTTP PUT -->\n<div *ngIf=\"editViewEnabled\">\n    <div class=\"container\" *ngFor=\"let customer of customers\">\n        <div class=\"row\" *ngIf=\"editId !== customer.id\">\n            <div class=\"col-md-4\">\n            {{ customer.firstName  }} {{ customer.lastName }} \n            </div>\n            <div class=\"col-md-8\">\n                <span class=\"btn btn-success pull-left\" \n                    (click)=\"editId=customer.id\">Edit</span>\n            </div>\n        </div>\n        <div *ngIf=\"editId == customer.id\">\n            <h4>{{ customer.firstName  }} {{ customer.lastName }}</h4>\n            <br />\n            <form (ngSubmit)=\"save(customer)\" #customerForm=\"ngForm\">\n                <div class=\"form-group\">\n                    <label for=\"name\">First Name</label>\n                    <input type=\"text\" class=\"form-control\" name=\"firstName\" #firstName=\"ngModel\" [(ngModel)]=\"customer.firstName\" required>\n                    <div class=\"alert alert-danger\" [hidden]=\"firstName.valid\">First Name is required</div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"name\">Last Name</label>\n                    <input type=\"text\" class=\"form-control\" name=\"lastName\" #lastName=\"ngModel\" [(ngModel)]=\"customer.lastName\" required>\n                    <div class=\"alert alert-danger\" [hidden]=\"lastName.valid\">Last Name is required</div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"name\">Email</label>\n                    <input type=\"text\" class=\"form-control\" name=\"email\" #email=\"ngModel\" [(ngModel)]=\"customer.email\" required>\n                    <div class=\"alert alert-danger\" [hidden]=\"email.valid\">Email is required</div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"name\">City</label>\n                    <input type=\"text\" class=\"form-control\" name=\"city\" #city=\"ngModel\" [(ngModel)]=\"customer.city\" required>\n                    <div class=\"alert alert-danger\" [hidden]=\"city.valid\">City is required</div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"name\">Address</label>\n                    <input type=\"text\" class=\"form-control\" name=\"address\" #address=\"ngModel\" [(ngModel)]=\"customer.address\" required>\n                    <div class=\"alert alert-danger\" [hidden]=\"address.valid\">Address is required</div>\n                </div>\n                <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!customerForm.valid\">Submit</button>&nbsp;\n                <span type=\"button\" class=\"btn btn-default\" (click)=\"editId=0\">Cancel</span>\n            </form>\n        </div>\n        <br />\n    </div>\n\n    <span class=\"alert alert-danger\" [hidden]=\"!errorMessage\">{{ errorMessage }}</span>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}